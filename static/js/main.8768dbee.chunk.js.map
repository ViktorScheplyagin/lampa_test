{"version":3,"sources":["styles/theme.ts","store/resource/cart/actions.ts","store/resource/cart/reducer.ts","store/resource/home/actions.ts","store/resource/home/reducer.ts","store/index.ts","shared_components/Layout/Footer/index.tsx","shared_components/NavBar/NavBarPanel.tsx","shared_components/NavBar/index.tsx","shared_components/Logo/index.tsx","shared_components/Layout/Header/Header.tsx","shared_components/Layout/Header/index.tsx","shared_components/Layout/index.tsx","pages/Home/components/Board/index.tsx","pages/Home/Home.tsx","pages/Home/HomeContainer.tsx","pages/Home/index.ts","store/resource/cart/thunks.ts","store/resource/home/thunks.ts","pages/Cart/index.tsx","pages/HouseAndHome/index.tsx","pages/Women/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["customTheme","theme","addProductToCartAC","product","type","payload","toggleIsProductsFetchingAC","flag","toggleIsProductAddingAC","initialState","items","isOrderSubmitting","isProductsFetching","isProductAdding","isProductRemoving","cartReducer","state","action","targetIdx","indexOf","filter","item","idx","fetchNewProductsAC","products","isProductsAddingToCart","homeReducer","rootReducer","combineReducers","home","cart","store","createStore","applyMiddleware","thunkMiddleware","Footer","Box","NavBarPanel","width","textColor","children","Flex","justify","align","w","h","p","boxSizing","color","NavBar","to","Logo","size","x","y","Image","src","alt","Header","px","pos","zIndex","shadow","HeaderContainer","Layout","Board","height","cover","overflow","Home","HomeContainer","fetchProducts","fetchCartItems","cartItemsLength","homeProps","useEffect","length","connect","isProductAddingToCart","addToCart","dispatch","a","Promise","resolve","setTimeout","responseJSON","localStorage","getItem","productsJSON","JSON","parse","Cart","HouseAndHome","Women","App","ThemeProvider","CSSReset","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8768dbee.chunk.js","sourcesContent":["import { theme } from '@chakra-ui/core';\r\n\r\nconst customTheme = {\r\n  ...theme,\r\n};\r\n\r\nexport default customTheme;","import { OrderPayload, ProductPayload } from 'store/entities/model';\n\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\nexport const REMOVE_PRODUCT_FROM_CART = 'REMOVE_PRODUCT_FROM_CART';\nexport const SUBMIT_ORDER = 'SUBMIT_ORDER';\nexport const TOGGLE_IS_ORDER_SUBMITTING = 'TOGGLE_IS_ORDER_SUBMITTING';\nexport const TOGGLE_IS_PRODUCTS_FETCHING = 'TOGGLE_IS_PRODUCTS_FETCHING';\nexport const TOGGLE_IS_PRODUCT_ADDING = 'TOGGLE_IS_PRODUCT_ADDING';\nexport const TOGGLE_IS_PRODUCT_REMOVING = 'TOGGLE_IS_PRODUCT_REMOVING';\nexport const FETCH_CART_ITEMS = 'FETCH_CART_ITEMS';\n\nexport const fetchCartItemsAC = (items: ProductPayload[]) => ({\n  type: FETCH_CART_ITEMS,\n  payload: items,\n});\n\nexport const addProductToCartAC = (product: ProductPayload) => ({\n  type: ADD_PRODUCT_TO_CART,\n  payload: product,\n});\n\nexport const removeProductFromCartAC = (product: ProductPayload) => ({\n  type: REMOVE_PRODUCT_FROM_CART,\n  payload: product,\n});\n\nexport const submitOrderAC = (order: OrderPayload) => ({\n  type: SUBMIT_ORDER,\n  payload: order,\n});\n\nexport const toggleIsOrderSubmittingAC = (flag: boolean) => ({\n  type: TOGGLE_IS_ORDER_SUBMITTING,\n  payload: flag,\n});\n\nexport const toggleIsProductsFetchingAC = (flag: boolean) => ({\n  type: TOGGLE_IS_PRODUCTS_FETCHING,\n  payload: flag,\n});\n\nexport const toggleIsProductAddingAC = (flag: boolean) => ({\n  type: TOGGLE_IS_PRODUCT_ADDING,\n  payload: flag,\n});\n\nexport const toggleIsProductRemovingAC = (flag: boolean) => ({\n  type: TOGGLE_IS_PRODUCT_REMOVING,\n  payload: flag,\n});\n","import { ProductPayload } from 'store/entities/model';\nimport {\n  ADD_PRODUCT_TO_CART,\n  FETCH_CART_ITEMS,\n  REMOVE_PRODUCT_FROM_CART,\n  TOGGLE_IS_ORDER_SUBMITTING,\n  TOGGLE_IS_PRODUCTS_FETCHING,\n  TOGGLE_IS_PRODUCT_ADDING,\n  TOGGLE_IS_PRODUCT_REMOVING,\n} from './actions';\n\ntype StateType = {\n  items: ProductPayload[];\n  isOrderSubmitting: boolean;\n  isProductsFetching: boolean;\n  isProductAdding: boolean;\n  isProductRemoving: boolean;\n};\n\ntype ActionType = {\n  type: string;\n  payload: any;\n};\n\nconst initialState: StateType = {\n  items: [],\n  isOrderSubmitting: false,\n  isProductsFetching: false,\n  isProductAdding: false,\n  isProductRemoving: false,\n};\n\nconst cartReducer = (state = initialState, action: ActionType) => {\n  switch (action.type) {\n    case ADD_PRODUCT_TO_CART:\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n      };\n\n    case REMOVE_PRODUCT_FROM_CART:\n      const { items } = state;\n      const targetIdx = items.indexOf(action.payload);\n\n      return {\n        ...state,\n        items: items.filter((item, idx) => idx !== targetIdx),\n      };\n\n    case FETCH_CART_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n      };\n\n    case TOGGLE_IS_ORDER_SUBMITTING:\n      return {\n        ...state,\n        isOrderSubmitting: action.payload,\n      };\n\n    case TOGGLE_IS_PRODUCTS_FETCHING:\n      return {\n        ...state,\n        isProductsFetching: action.payload,\n      };\n\n    case TOGGLE_IS_PRODUCT_ADDING:\n      return {\n        ...state,\n        isProductAdding: action.payload,\n      };\n\n    case TOGGLE_IS_PRODUCT_REMOVING:\n      return {\n        ...state,\n        isProductRemoving: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import { ProductPayload } from 'store/entities/model';\n\nexport const FETCH_NEW_PRODUCTS = 'FETCH_NEW_PRODUCTS';\nexport const TOGGLE_IS_PRODUCTS_FETCHING = 'TOGGLE_IS_PRODUCTS_FETCHING';\nexport const TOGGLE_IS_PRODUCT_ADDING_TO_CART =\n  'TOGGLE_IS_PRODUCT_ADDING_TO_CART';\n\nexport const fetchNewProductsAC = (products: ProductPayload[]) => ({\n  type: FETCH_NEW_PRODUCTS,\n  payload: products,\n});\n\nexport const toggleIsProductsFetchingAC = (flag: boolean) => ({\n  type: TOGGLE_IS_PRODUCTS_FETCHING,\n  payload: flag,\n});\n","import { Action } from 'redux';\nimport { ProductPayload } from 'store/entities/model';\nimport {\n  FETCH_NEW_PRODUCTS,\n  TOGGLE_IS_PRODUCTS_FETCHING,\n} from 'store/resource/home/actions';\n\ntype StateType = {\n  products: ProductPayload[];\n  isProductsFetching: boolean;\n  isProductsAddingToCart: boolean;\n};\n\ntype ActionType = Action & { payload: any };\n\nconst initialState: StateType = {\n  products: [],\n  isProductsFetching: false,\n  isProductsAddingToCart: false,\n};\n\nconst homeReducer = (state = initialState, action: ActionType) => {\n  switch (action.type) {\n    case FETCH_NEW_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n      };\n    case TOGGLE_IS_PRODUCTS_FETCHING:\n      return {\n        ...state,\n        isProductsFetching: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default homeReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport cartReducer from './resource/cart/reducer';\nimport homeReducer from './resource/home/reducer';\nimport thunkMiddleware from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  home: homeReducer,\n  cart: cartReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\ntype RootReducerType = typeof rootReducer;\nexport type AppStateType = ReturnType<RootReducerType>;\n\nexport default store;\n","import { Box } from '@chakra-ui/core';\nimport React from 'react';\n\nconst Footer: React.FC = () => {\n  return <Box>Footer</Box>;\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Flex } from '@chakra-ui/core';\n\ntype NavBarPanelProps = {\n  textColor?: string;\n  width?: string;\n  children: any[]\n};\n\nconst NavBarPanel: React.FC<NavBarPanelProps> = ({ width, textColor, children }) => {\n  return (\n    <Flex\n      justify=\"space-between\"\n      align=\"center\"\n      w={width || \"100%\"}\n      h=\"3.5em\"\n      p=\"1em\"\n      boxSizing=\"border-box\"\n      color={textColor || \"gray.900\"}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nexport default NavBarPanel;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport NavBarPanel from './NavBarPanel';\r\n\r\nconst NavBar: React.FC = () => {\r\n  return (\r\n    <NavBarPanel>\r\n      <NavLink to=\"/\">Home</NavLink>\r\n      <NavLink to=\"/women\">Women</NavLink>\r\n      <NavLink to=\"/house_and_home\">House&Home</NavLink>\r\n      <NavLink to=\"/cart\">Cart</NavLink>\r\n    </NavBarPanel>\r\n  )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Box, Image } from '@chakra-ui/core';\r\n\r\n\r\ntype LogoType = {\r\n  size?: { x: string; y: string };\r\n};\r\n\r\nconst Logo: React.FC<LogoType> = ({ size }) => {\r\n  return (\r\n    <Box \r\n      w={size?.x || \"50px\"}\r\n      h={size?.y || \"50px\"}\r\n    >\r\n      <Image\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        src='https://fakeimg.pl/120/bbbbbb'\r\n        alt=\"logo\"\r\n      />\r\n    </Box>\r\n  )\r\n};\r\n\r\nexport default Logo;","import React from 'react';\nimport NavBar from 'shared_components/NavBar';\nimport { Flex } from '@chakra-ui/core';\nimport Logo from 'shared_components/Logo';\nimport { NavLink } from 'react-router-dom';\n\nconst Header: React.FC = () => {\n  return (\n    <Flex\n      px={[0, 0, 0, 20]}\n      justify=\"space-between\"\n      pos=\"fixed\"\n      zIndex={1}\n      w=\"100%\"\n      shadow=\"inset 0 40px 70px -60px black\"\n      // TODO background changing depending from the theme prop:\n      // \"white\": white background,\n      // \"dark\": no background (transparent)\n    >\n      <NavLink to=\"/\">\n        <Logo size={{ x: \"120px\", y: \"60px\" }} />\n      </NavLink>\n      <NavBar />\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from 'react';\r\nimport Header from './Header';\r\n\r\nconst HeaderContainer: React.FC = () => {\r\n  //TODO make header sticky if 5em scrolled down\r\n  return (\r\n    <Header />\r\n  )\r\n};\r\n\r\nexport default HeaderContainer;","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Layout: React.FC = ({ children }) => {\n  return (\n    <>\n      <Header />\n      {children}\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","import { Flex } from '@chakra-ui/core';\r\nimport React from 'react';\r\n\r\n\r\ntype BoardType = {\r\n  height: string;\r\n  cover: string;\r\n};\r\n\r\n\r\nconst Board: React.FC<BoardType> = ({ height, cover }) => {\r\n  return (\r\n    <Flex\r\n      align=\"center\"\r\n      justify='center'\r\n      w=\"100%\"\r\n      h={height}\r\n      overflow=\"hidden\"\r\n    >\r\n      <img width=\"100%\" src={cover} alt=\"cover\" />\r\n    </Flex>\r\n  )\r\n};\r\n\r\nexport default Board;","import React from 'react';\nimport Layout from 'shared_components/Layout';\n\nimport { HomeProps } from './types';\nimport Board from './components/Board';\n\n\nconst Home: React.FC<HomeProps> = () => (\n  <Layout>\n    <Board\n      height=\"85vh\"\n      cover=\"https://fakeimg.pl/1000\"\n    />\n    some goods\n  </Layout>\n);\n\nexport default Home;\n","import React, { useEffect } from 'react';\r\nimport Home from './Home';\r\nimport { HomeContainerProps } from './types';\r\n\r\nconst HomeContainer: React.FC<HomeContainerProps> = ({\r\n  fetchProducts,\r\n  fetchCartItems,\r\n  cartItemsLength,\r\n  ...homeProps\r\n}) => {\r\n  useEffect(() => {\r\n    if (homeProps.products.length === 0) {\r\n      fetchProducts();\r\n    }\r\n    if (cartItemsLength === 0) {\r\n      fetchCartItems();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return <Home {...homeProps} />;\r\n};\r\n\r\nexport default HomeContainer;","import Home from './HomeContainer';\nimport { connect } from 'react-redux';\nimport { AppStateType } from 'store';\nimport { fetchProductsTC } from 'store/resource/home/thunks';\nimport {\n  addProductToCartTC,\n  fetchCartItemsTC,\n} from 'store/resource/cart/thunks';\n\nconst mapStateToProps = ({ home, cart }: AppStateType) => ({\n  products: home.products,\n  cartItemsLength: cart.items.length,\n  isProductsFetching: home.isProductsFetching,\n  isProductAddingToCart: cart.isProductAdding,\n});\n\nexport default connect(mapStateToProps, {\n  addToCart: addProductToCartTC,\n  fetchProducts: fetchProductsTC,\n  fetchCartItems: fetchCartItemsTC,\n})(Home);\n","import { OrderPayload, ProductPayload } from 'store/entities/model';\n// import {\n//   deleteItemFromCart,\n//   getAllCartItems,\n//   postItemToCart,\n//   postOrder,\n// } from 'services/api';\nimport {\n  addProductToCartAC,\n  fetchCartItemsAC,\n  removeProductFromCartAC,\n  toggleIsOrderSubmittingAC,\n  toggleIsProductAddingAC,\n  toggleIsProductRemovingAC,\n  toggleIsProductsFetchingAC,\n} from 'store/resource/cart/actions';\n\nexport const submitOrderTC = (order: OrderPayload) => async (dispatch) => {\n  dispatch(toggleIsOrderSubmittingAC(true));\n\n  // await postOrder(order);\n\n  dispatch(toggleIsOrderSubmittingAC(false));\n};\n\nexport const fetchCartItemsTC = () => async (dispatch) => {\n  dispatch(toggleIsProductsFetchingAC(true));\n\n  // const cartItemsJSON = await getAllCartItems();\n  // const cartItems: ProductPayload[] = JSON.parse(cartItemsJSON as string);\n\n  dispatch(toggleIsProductsFetchingAC(false));\n  // dispatch(fetchCartItemsAC(cartItems));\n};\n\nexport const addProductToCartTC = (product: ProductPayload) => async (\n  dispatch,\n) => {\n  dispatch(toggleIsProductAddingAC(true));\n  // await postItemToCart(product);\n  dispatch(addProductToCartAC(product));\n  dispatch(toggleIsProductAddingAC(false));\n};\n\nexport const removeProductFromCartTC = (product: ProductPayload) => async (\n  dispatch,\n) => {\n  dispatch(toggleIsProductRemovingAC(true));\n  // await deleteItemFromCart(product.id);\n  dispatch(removeProductFromCartAC(product));\n  dispatch(toggleIsProductRemovingAC(false));\n};\n","import { ProductPayload } from 'store/entities/model';\nimport { fetchNewProductsAC, toggleIsProductsFetchingAC } from './actions';\n\nexport const fetchProductsTC = () => async (dispatch) => {\n  dispatch(toggleIsProductsFetchingAC(true));\n\n  const productsJSON = await new Promise((resolve) => {\n    setTimeout(() => {\n      const responseJSON = localStorage.getItem('all');\n      resolve(responseJSON);\n    }, 2000);\n  });\n  const products: ProductPayload[] = JSON.parse(productsJSON as string);\n\n  dispatch(toggleIsProductsFetchingAC(false));\n  dispatch(fetchNewProductsAC(products));\n};\n","import React from 'react';\r\nimport Layout from 'shared_components/Layout';\r\n\r\nconst Cart: React.FC = () => {\r\n  return (\r\n    <Layout>\r\n      Here will be a cart page\r\n    </Layout>\r\n  )\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport Layout from 'shared_components/Layout';\r\n\r\nconst HouseAndHome: React.FC = () => {\r\n  return (\r\n    <Layout>\r\n      Here will be a HouseAndHome page\r\n    </Layout>\r\n  )\r\n};\r\n\r\nexport default HouseAndHome;","import React from 'react';\r\nimport Layout from 'shared_components/Layout';\r\n\r\nconst Women: React.FC = () => {\r\n  return (\r\n    <Layout>\r\n      Here will be a Women page\r\n    </Layout>\r\n  )\r\n};\r\n\r\nexport default Women;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider as StoreProvider } from 'react-redux';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport customTheme from 'styles/theme';\nimport store from 'store';\n\nimport Home from 'pages/Home';\nimport Cart from 'pages/Cart';\nimport HouseAndHome from 'pages/HouseAndHome';\nimport Women from 'pages/Women';\n\nconst App: React.FC = () => {\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <CSSReset />\n\n      <StoreProvider store={store}>\n        <BrowserRouter basename=\"/shop\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/cart\">\n              <Cart />\n            </Route>\n            <Route exact path=\"/house_and_home\">\n              <HouseAndHome />\n            </Route>\n            <Route exact path=\"/women\">\n              <Women />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </StoreProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}